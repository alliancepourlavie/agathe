{"version":3,"file":"static/js/349.547e7a2d.chunk.js","mappings":"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","sources":["../node_modules/react-leaflet/lib/CircleMarker.js","../node_modules/@react-leaflet/core/lib/circle.js","pages/sw/components/basemap.js","../node_modules/react-leaflet/lib/Popup.js","../node_modules/react-leaflet/lib/ZoomControl.js"],"sourcesContent":["import { createElementObject, createPathComponent, extendContext, updateCircle } from '@react-leaflet/core';\nimport { CircleMarker as LeafletCircleMarker } from 'leaflet';\nexport const CircleMarker = createPathComponent(function createCircleMarker({ center , children: _c , ...options }, ctx) {\n    const marker = new LeafletCircleMarker(center, options);\n    return createElementObject(marker, extendContext(ctx, {\n        overlayContainer: marker\n    }));\n}, updateCircle);\n","export function updateCircle(layer, props, prevProps) {\n    if (props.center !== prevProps.center) {\n        layer.setLatLng(props.center);\n    }\n    if (props.radius != null && props.radius !== prevProps.radius) {\n        layer.setRadius(props.radius);\n    }\n}\n","import React from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup, CircleMarker, ZoomControl } from \"react-leaflet\";\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from \"leaflet\";\r\nimport './basemap.css';\r\n\r\n\r\nimport { landingsitejs } from \"../../../data/landing_site.js\";\r\nimport { Iconlanding } from \"../../../icon/icons.js\";\r\n\r\n\r\n\r\nconst Basemap = () => {\r\n\r\n    const bagiracenterdesktop = [-2.42225845534009, 28.98585211433215];\r\n    const bagiracentermobile = [-2.452313904936086, 28.861719874473227];\r\n    const outerbounds = [\r\n        [-1.431804013910979, 28.732367834895886],\r\n        [-2.6180336297309834, 29.504249223136057],\r\n    ];\r\n\r\n    const bagira = [-2.481882127634906, 28.842175394455065]\r\n    const kadutu = [-2.4923069203619495, 28.849800601841874]\r\n    const fillBagira = { fillColor: 'rgba(114, 114, 114, 0)', color: '#7f473b', weight: 8 }\r\n    const fillKadutu = { fillColor: 'rgba(223, 143, 68, 0)', color: '#df8f44', weight: 8 }\r\n\r\n    return (\r\n\r\n        <><div className='maptext'>KADUTU ET BAGIRA<br />SITES DE DEBARQUEMENT<br /></div>\r\n\r\n            <div className='bagiramapdesktop'>\r\n                <MapContainer\r\n                    doubleClickZoom={false}\r\n                    center={bagiracenterdesktop}\r\n                    zoom={12}\r\n                    scrollWheelZoom={false}\r\n                    minZoom={7}\r\n                    maxZoom={14}\r\n                    maxBounds={outerbounds}\r\n                    maxBoundsViscosity={1.0}\r\n                    style={{ height: \"90vh\", backgroundColor: 'rgb(247, 245, 251)', background: 'linear-gradient(90deg, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.01) 49%, rgba(0, 0, 0, 0.03) 50%, rgba(0, 0, 0, 0.01) 51%, rgba(0, 0, 0, 0) 100%)' }}>\r\n                    <TileLayer\r\n                        url=\"https://www.alessandromusetta.com/geo/tiles/agathe/kivu/{z}/{x}/{y}.png\" />\r\n                    <ZoomControl position=\"bottomright\" />\r\n\r\n                    {landingsitejs.features.map((feature, index) => {\r\n                        return (\r\n                            <Marker\r\n                                key={index}\r\n                                position={L.latLng(feature.geometry.coordinates[1], feature.geometry.coordinates[0])}\r\n                                icon={Iconlanding}>\r\n                            </Marker>\r\n                        );\r\n                    })}\r\n\r\n                    <CircleMarker center={kadutu} pathOptions={fillKadutu} radius={15}>\r\n                        <Popup>KADUTU</Popup>\r\n                    </CircleMarker>\r\n                    <CircleMarker center={bagira} pathOptions={fillBagira} radius={15}>\r\n                        <Popup>BAGIRA</Popup>\r\n                    </CircleMarker>\r\n\r\n                </MapContainer>\r\n            </div>\r\n\r\n            <div className='bagiramapmobile'>\r\n                <MapContainer\r\n                    doubleClickZoom={false}\r\n                    center={bagiracentermobile}\r\n                    zoom={12}\r\n                    scrollWheelZoom={false}\r\n                    dragging={false}\r\n                    minZoom={7}\r\n                    maxZoom={14}\r\n                    maxBounds={outerbounds}\r\n                    maxBoundsViscosity={1.0}\r\n                    style={{ height: \"90vh\", backgroundColor: 'rgb(247, 245, 251)', background: 'linear-gradient(90deg, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.01) 49%, rgba(0, 0, 0, 0.03) 50%, rgba(0, 0, 0, 0.01) 51%, rgba(0, 0, 0, 0) 100%)' }}>\r\n                    <TileLayer\r\n                        url=\"https://www.alessandromusetta.com/geo/tiles/agathe/kivu/{z}/{x}/{y}.png\" />\r\n                    <ZoomControl position=\"bottomright\" />\r\n\r\n                    {landingsitejs.features.map((feature, index) => {\r\n                        return (\r\n                            <Marker\r\n                                key={index}\r\n                                position={L.latLng(feature.geometry.coordinates[1], feature.geometry.coordinates[0])}\r\n                                icon={Iconlanding}>\r\n                            </Marker>\r\n                        );\r\n                    })}\r\n\r\n                    <CircleMarker center={kadutu} pathOptions={fillKadutu} radius={12}>\r\n                        <Popup>KADUTU</Popup>\r\n                    </CircleMarker>\r\n                    <CircleMarker center={bagira} pathOptions={fillBagira} radius={12}>\r\n                        <Popup>BAGIRA</Popup>\r\n                    </CircleMarker>\r\n\r\n                </MapContainer>\r\n            </div></>\r\n    )\r\n\r\n}\r\n\r\nexport default Basemap;\r\n","import { createElementObject, createOverlayComponent } from '@react-leaflet/core';\nimport { Popup as LeafletPopup } from 'leaflet';\nimport { useEffect } from 'react';\nexport const Popup = createOverlayComponent(function createPopup(props, context) {\n    const popup = new LeafletPopup(props, context.overlayContainer);\n    return createElementObject(popup, context);\n}, function usePopupLifecycle(element, context, { position  }, setOpen) {\n    useEffect(function addPopup() {\n        const { instance  } = element;\n        function onPopupOpen(event) {\n            if (event.popup === instance) {\n                instance.update();\n                setOpen(true);\n            }\n        }\n        function onPopupClose(event) {\n            if (event.popup === instance) {\n                setOpen(false);\n            }\n        }\n        context.map.on({\n            popupopen: onPopupOpen,\n            popupclose: onPopupClose\n        });\n        if (context.overlayContainer == null) {\n            // Attach to a Map\n            if (position != null) {\n                instance.setLatLng(position);\n            }\n            instance.openOn(context.map);\n        } else {\n            // Attach to container component\n            context.overlayContainer.bindPopup(instance);\n        }\n        return function removePopup() {\n            context.map.off({\n                popupopen: onPopupOpen,\n                popupclose: onPopupClose\n            });\n            context.overlayContainer?.unbindPopup();\n            context.map.removeLayer(instance);\n        };\n    }, [\n        element,\n        context,\n        setOpen,\n        position\n    ]);\n});\n","import { createControlComponent } from '@react-leaflet/core';\nimport { Control } from 'leaflet';\nexport const ZoomControl = createControlComponent(function createZoomControl(props) {\n    return new Control.Zoom(props);\n});\n"],"names":["CircleMarker","createPathComponent","_ref","ctx","center","children","_c","options","marker","LeafletCircleMarker","createElementObject","extendContext","overlayContainer","layer","props","prevProps","setLatLng","radius","setRadius","Basemap","outerbounds","bagira","kadutu","fillBagira","fillColor","color","weight","fillKadutu","_jsxs","_Fragment","className","_jsx","MapContainer","doubleClickZoom","zoom","scrollWheelZoom","minZoom","maxZoom","maxBounds","maxBoundsViscosity","style","height","backgroundColor","background","TileLayer","url","ZoomControl","position","landingsitejs","features","map","feature","index","Marker","L","geometry","coordinates","icon","Iconlanding","pathOptions","Popup","dragging","createOverlayComponent","context","popup","LeafletPopup","element","setOpen","useEffect","instance","onPopupOpen","event","update","onPopupClose","on","popupopen","popupclose","openOn","bindPopup","_context$overlayConta","off","unbindPopup","removeLayer","createControlComponent","Control","Zoom"],"sourceRoot":""}